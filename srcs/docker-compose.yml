version: "3.7"
services:
  nginx:
    build: requirements/nginx/
    container_name: nginx
    image: nginx
    # Maps the host machine's ports to the container's ports.
    ports:
      - "443:443"
    volumes:
      - wordpress-data:/var/www/html
    depends_on:
      - wordpress
    networks:
      - inception

  wordpress:
    build: 
      context: requirements/wordpress/
      args:
        DB_HOST: ${dbhost}
        DB_USER: ${user}
        DB_PASSWORD: ${password}
        DB_NAME: ${dbname}
        WP_ADMIN_USER: ${wp_admin_user}
        WP_ADMIN_PASSWORD: ${wp_admin_password}
        WP_ADMIN_EMAIL: ${wp_admin_email}
        WP_TITLE: ${wp_title}
        WP_URL: ${wp_url}
        WP_GUEST_USER: ${wp_guest_user}
        WP_GUEST_PASSWORD: ${wp_guest_password}
        WP_GUEST_EMAIL: ${wp_guest_email}
    container_name: wordpress
    image: wordpress
    volumes:
      - wordpress-data:/var/www/html
    # Exposes port 9000 to other services in the same Docker network.
    # This does not make the port accessible from the host machine.
    expose:
      - "9000"
    depends_on:
      - mariadb
    networks:
      - inception

  mariadb:
    build: 
      context: requirements/mariadb/
      args:
        MYSQL_DATABASE: ${dbname}
        MYSQL_PASSWORD: ${password}
        MYSQL_USER: ${user}
    container_name: mariadb
    image: mariadb
    expose:
      - "3306"
    volumes:
      - mariadb-data:/var/lib/mysql
    networks:
      - inception

volumes:
  wordpress-data:
    name: wordpress-data
    driver_opts:
      type: none
      device: /home/dtolmaco/data/wordpress-data
      o: bind
  mariadb-data:
    name: mariadb-data
    driver_opts:
      type: none
      device: /home/dtolmaco/data/mariadb-data
      o: bind
networks:
  inception:
